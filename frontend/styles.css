/* Apply styles to the body and html to ensure full page coverage */
html,
body {
  background-color: black;
  height: 100%;
  margin: 0;
  padding: 0;
}

/* Black ribbon header */
.black-ribbon {
  background-color: black;
  color: #f0edcf;
  text-align: center;
  position: relative;
  margin-top: 20%;
  margin-bottom: 20%;
}

.black-ribbon h1 {
  font-size: 18dvh; /* Adjust as needed */
  margin: 0;
}

/* CSS for the left partition */
.details {
  width: 100%; /* 3/5th of the screen */
  height: 100%; /* Full height of the viewport */
  color: white;
  background: black;
  display: block;
  min-height: 100vh;
  /* justify-content: center;
  align-content: center;
  align-items: center;
  overflow: hidden; */
}

.para1 {
  display: block;
  margin-left: 10%;
  margin-bottom: 15%;
  padding-top: 20px;
  margin-top: 5%;
  margin-right: 10%;
  font-size: 5dvh;
  justify-content: center;
  align-content: center;
}

.para2 {
  display: block;
  margin-left: 10%;
  margin-bottom: 15%;
  padding-top: 15px;
  margin-top: 5%;
  margin-right: 10%;
  font-size: 5dvh;
  justify-content: center;
}

.para3 {
  display: block;
  margin-left: 10%;
  margin-bottom: 15%;
  padding-top: 20px;
  margin-top: 1%;
  margin-right: 10%;
  font-size: 5dvh;
  justify-content: center;
}

.para4 {
  position: absolute;
  padding-right: 40%;
  margin-left: 10%;
  padding-top: 10%;
  margin-top: 5%;
  margin-right: 10%;
  font-size: 5dvh;
}



.img1 {
  width: 35%;
  height: auto;
  float: right;
}
.img2 {
  width: 35%;
  height: auto;
  float: left;
  margin-right: 1%;
  margin-top: 5%;
}
.img3 {
  width: 35%;
  height: auto;
  float: right;
  margin-top: 50px;
}
.img4 {
  width: 100%;
  height: auto;
  float: right;
}

.container {
  max-width: 1000px;
  min-height: 500px;
  position: absolute;
  top: 3800px;
  left: 200px;
  margin: 0 auto;
  float: left;
  padding: 20px;
  background-color: #ffffff;
  box-shadow: 0 0 10px rgba(36, 155, 234, 0.1);
}

.card-body {
  text-align: center;
}

.custom-file {
  display: inline-block;
}

.card-header {
  font-size: 100px; /* Increase the font size */
  font-weight: bold; /* Make the font bold */
  text-align: right; /* Align the text to the right */
  color: #abbed2; /* Dark color for better readability */
}

/* Style to make the file input cover the button */
.custom-file-label::after {
  right: 0;
}

.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto; /* Enable scrolling if needed */
  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */
}

.modal-content {
  background-color: #fefefe;
  margin: 15% auto; /* 15% from the top and centered */
  padding: 20px;
  border: 1px solid #888;
  width: 80%; /* Could be more or less, depending on screen size */
}

/* Close button */
.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}

.particle {
  /* Starting values */
  --angle: (5 * var(--index));
  --radius: 40;
  --x: calc(sin(var(--angle)) * var(--radius) * 1vmin);
  --y: calc(cos(var(--angle)) * var(--radius) * 1vmin);

  /* Ending values */
  --angle2: calc(var(--index) * 1turn / var(--total));
  --x2: calc(sin(var(--angle2)) * var(--radius) * 1vmin);
  --y2: calc(cos(var(--angle2)) * var(--radius) * 1vmin);

  --size: 1;
  --speed: 10s;
  --delay: calc(var(--index) * var(--speed) / var(--total) * 4);

  --hue-angle: 10;
  --hue-range: 60;
  --hue-start: 20;

  /* Animation */
  animation: animation var(--speed) ease-out infinite alternate var(--delay);
  transform: translate3d(var(--x), var(--y), 0);
  opacity: 0;

  /* Particle styling */
  border-radius: 50%;
  background: currentColor;
  color: oklch(
    75% 0.3
      calc(
        sin(var(--hue-angle) * var(--index)) * var(--hue-range) +
          var(--hue-start)
      )
  );
  position: absolute;
  width: calc(var(--size) * 0.3vmin);
  top: 300px;
  left: 70%;
  float: left;
  height: calc(var(--size) * 0.1vmin);
  contain: strict; /* Does this help or is translate3d already doing it*/
}

@keyframes animation {
  100% {
    transform: translate3d(var(--x2), var(--y2), 0);
    opacity: 1;
  }
}
